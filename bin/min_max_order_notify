#!/bin/sh -x

CMD=$0

PARAMS=""
while (( "$#" )); do
  case "$1" in
    -f|--flag-with-argument)
      FARG=$2
      shift 2
      ;;
    --) # end argument parsing
      shift
      break
      ;;
    -*|--*=) # unsupported flags
      echo "Error: Unsupported flag $1" >&2
      exit 1
      ;;
    *) # preserve positional arguments
      PARAMS="$PARAMS $1"
      shift
      ;;
  esac
done

PID=$$
LOGFILE=/home/nathaniel/log/minmax.$PID.log
WD=/home/nathaniel/src/git/rlsepp
cd $WD
echo "begin $0 $PID `date` `pwd`" >> $LOGFILE
echo "   $WD/bin/$CMD $PARAMS" >> $LOGFILE

PS=`ps -ef | grep min_max_order_notify | grep -v grep | grep -v $$`
echo $PS
if [ -n "$PS" ]; then
 exit
fi 

#env NODE_PATH=$WD /usr/bin/node bin/show_arbitrage_cost --write data/events.minmax.$PID.json $PARAMS 2>&1 >> $LOGFILE

env NODE_PATH=$WD /usr/bin/node bin/transferAction --write data/events.xfer.$PID.json  -b -x "exmo kraken coinbaseprime gemini itbit bitstamp bitfinex" 2>&1 >> $LOGFILE

while [ ! -e data/events.xfer.$PID.corrected.json ]; do
  env NODE_PATH=$WD /usr/bin/node bin/orderbook_sandbox --file data/events.xfer.$PID.json --write data/events.xfer.$PID.corrected.json $PARAMS 2>&1 >> $LOGFILE
  if [ ! -e data/events.xfer.$PID.corrected.json ]; then
    sleep 30
  fi
done

env NODE_PATH=$WD /usr/bin/node bin/events_summary --file data/events.xfer.$PID.corrected.json --notify 2 --profit 2 $PARAMS 2>&1 >> $LOGFILE
